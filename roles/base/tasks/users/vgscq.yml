- name: Users | vgscq | create group
  tags: groups,users
  ansible.builtin.group:
    name: vgscq
    state: present

- name: Find fish shell path
  ansible.builtin.command: which fish
  register: fish_path
  changed_when: false

- name: Check if user vgscq exists
  ansible.builtin.stat:
    path: "/home/vgscq"
  register: vgscq_user_exists

- name: Create user vgscq if it does not exist
  ansible.builtin.user:
    name: vgscq
    group: vgscq
    groups: "users,wheel"  # Remove spaces between groups
    state: present
    password: "{{ '1111' | password_hash('sha512') }}"
    shell: "{{ fish_path.stdout }}"
  when: not vgscq_user_exists.stat.exists

- name: Expire password for vgscq if the user was created
  ansible.builtin.command: passwd -e vgscq
  when: not vgscq_user_exists.stat.exists
  changed_when: true


- name: Users | vgscq | add sudoers file
  tags: sudo
  ansible.builtin.copy:
    src: users/vgscq/sudoer_vgscq
    dest: /etc/sudoers.d/vgscq
    owner: root
    group: root
    mode: '0440'

- name: Users | vgscq | create config directories
  tags: dotfiles
  ansible.builtin.file:
    path: /home/vgscq/{{ item.dir }}
    state: directory
    owner: vgscq
    group: vgscq
    mode: '0700'
  with_items:
    - { dir: '.config' }
    - { dir: '.config/htop' }
    - { dir: '.config/mc' }
    - { dir: '.config/neofetch' }
    - { dir: '.config/nvim' }
    - { dir: '.config/fish' }
    - { dir: '.config/bin'}

- name: Users | vgscq | copy dotfiles
  tags: dotfiles
  ansible.builtin.copy:
    src: users/vgscq/{{ item.src }}
    dest: /home/vgscq/{{ item.dest }}
    owner: vgscq
    group: vgscq
    mode: '0600'
  with_items:
    - { src: 'htop/htoprc', dest: '.config/htop/htoprc' }
    - { src: 'mc/ini', dest: '.config/mc/ini' }
    - { src: 'neofetch/config.conf', dest: '.config/neofetch/config.conf' }
    - { src: 'nvim/init.vim', dest: '.config/nvim/init.vim' }
    - { src: 'fish/', dest: '.config/fish/' }
    - { src: '.bcrc', dest: '.config/.bcrc'}
    - { src: 'bin/', dest: '.config/bin/' }

- name: Copy udev rules
  tags: dotfiles
  ansible.builtin.copy:
    src: users/vgscq/udev_rules/
    dest: /etc/udev/rules.d/
    owner: root
    group: root
    mode: '0644'

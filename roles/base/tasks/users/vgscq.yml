- name: Users | vgscq | create group
  tags: groups,users
  ansible.builtin.group:
    name: vgscq
    state: present

- name: Find fish shell path
  ansible.builtin.command: which fish
  register: fish_path
  changed_when: false

- name: Check if user vgscq exists (without failing)
  ansible.builtin.getent:
    database: passwd
    key: "vgscq"
    ignore_errors: yes
  register: user_exists


- name: Create user (if not exists) with password
  ansible.builtin.user:
    name: "vgscq"
    password: "111"
  when: not user_exists.matched

- name: Expire password for existing user (if exists)
  ansible.builtin.command: passwd -e vgscq
  when: not user_exists.matched
  changed_when: true


# - name: Users | vgscq | create user
#   tags: users
#   ansible.builtin.user:
#     name: vgscq
#     group: vgscq
#     groups: users,{{ sudo_group }}
#     state: present
#     password: "{{ '1111' | password_hash('sha512') }}"
#     shell: "{{ fish_path.stdout }}"

# - name: Users | vgscq | expire password
#   ansible.builtin.command: passwd -e vgscq

- name: Users | vgscq | add sudoers file
  tags: sudo
  ansible.builtin.copy:
    src: users/vgscq/sudoer_vgscq
    dest: /etc/sudoers.d/vgscq
    owner: root
    group: root
    mode: '0440'

- name: Users | vgscq | create config directories
  tags: dotfiles
  ansible.builtin.file:
    path: /home/vgscq/{{ item.dir }}
    state: directory
    owner: vgscq
    group: vgscq
    mode: '0700'
  with_items:
    - { dir: '.config' }
    - { dir: '.config/htop' }
    - { dir: '.config/mc' }
    - { dir: '.config/neofetch' }
    - { dir: '.config/nvim' }


- name: Users | vgscq | copy dotfiles
  tags: dotfiles
  ansible.builtin.copy:
    src: users/vgscq/{{ item.src }}
    dest: /home/vgscq/{{ item.dest }}
    owner: vgscq
    group: vgscq
    mode: '0600'
  with_items:
    - { src: 'htop/htoprc', dest: '.config/htop/htoprc' }
    - { src: 'mc/ini', dest: '.config/mc/ini' }
    - { src: 'neofetch/config.conf', dest: '.config/neofetch/config.conf' }
    - { src: 'nvim/init.vim', dest: '.config/nvim/init.vim' }

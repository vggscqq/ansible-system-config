# distro-specific tasks for ubuntu
- name: System setup | tweaks | disable apport in config on ubuntu-based hosts
  tags: distro,distro-setup,apport,ubuntu
  ansible.builtin.lineinfile:
    dest: /etc/default/apport
    regexp: "enabled="
    line: "enabled=0"
  when: ansible_distribution in ["Ubuntu"]

- name: System setup | tweaks | disable and stop apport service on ubuntu-based hosts
  tags: distro,distro-setup,apport,ubuntu
  ansible.builtin.service:
    name: apport
    enabled: false
    state: stopped
  when: ansible_distribution in ["Ubuntu"]

- name: Setup udev
  become: true
  ansible.builtin.copy:
    src: udev/{{ item.src }}
    dest: /etc/udev/rules.d/{{ item.dest }}
    owner: root
    group: root
    mode: '0644'
  with_items:
    - { src: '99-dockstations.rules', dest: '99-dockstations.rules' }
    - { src: '99-low-battery.rules', dest: '99-low-battery.rules' }

- name: Copy udev handlers
  become: true
  ansible.builtin.copy:
    src: udev/{{ item.src }}
    dest: /home/vgscq/.config/bin/{{ item.dest }}
    owner: vgscq
    group: vgscq
    mode: '0755'
  with_items:
    - { src: 'battery.sh', dest: 'battery.sh' }
    - { src: 'battery_off.sh', dest: 'battery_off.sh' }

- name: Gnome | Extensions | Executor copy powermon.sh
  tags: gnome,gnome-wallpaper
  ansible.builtin.copy:
    src: gnome/powermon.sh
    dest: /home/vgscq/.config/bin/
    owner: vgscq
    group: vgscq
    mode: '0755'

- name: Install ZRAM
  block:
    - name: Install required packages
      ansible.builtin.package:
        name:
          - util-linux  # for mkswap
        state: present

    - name: Create the zram configuration script
      ansible.builtin.copy:
        dest: /usr/local/bin/configure-zram.sh
        content: |
          #!/bin/bash
          modprobe zram
          zramctl /dev/zram0 --algorithm zstd --size "$(($(grep MemTotal /proc/meminfo | tr -dc '0-9')/2))KiB"
          mkswap /dev/zram0
          swapon /dev/zram0
        mode: '0755'

    - name: Create the systemd service file
      ansible.builtin.copy:
        dest: /etc/systemd/system/zram.service
        content: |
          [Unit]
          Description=Configure zram device

          [Service]
          Type=oneshot
          ExecStart=/usr/local/bin/configure-zram.sh
          RemainAfterExit=true

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: Create sysctl config for zram
      ansible.builtin.copy:
        dest: /etc/sysctl.d/99-vm-zram-parameters.conf
        content: |
          vm.swappiness = 180
          vm.watermark_boost_factor = 0
          vm.watermark_scale_factor = 125
          vm.page-cluster = 0
        mode: '0644'

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable and start zram service
      ansible.builtin.systemd:
        name: zram.service
        enabled: true
        state: started

